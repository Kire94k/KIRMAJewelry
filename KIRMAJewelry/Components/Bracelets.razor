@page "/bracelets"
@inject IBraceletService client
@inject IMessagingService _MessagingService
@inject NavigationManager NavigationManager
<h2>All bracelets</h2>


@if (bracelets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <label>
            Bracelet name:
            <input @bind="BraceletName" />
        </label>
        <button @onclick="Add">
            add
        </button>

    </div>
    <ul class="bracelets">
        @foreach (var bracelet in bracelets)
        {
            <li @onclick="@(() =>OnSelect(bracelet))">
                <span class="badge">@bracelet.Id</span>@bracelet.Name
            </li>
            <button class="delete" title="delete bracelet" @onclick="@(()=> Delete(bracelet))">X</button>
        }
    </ul>
}

<BraceletDetail SelectedBracelet="@selectedBracelet"></BraceletDetail>

@code {
    Bracelet selectedBracelet;
    private Bracelet[] bracelets;
    private string BraceletName = "";

    protected override async Task OnInitializedAsync()
    {
        bracelets = await client.GetBracelets();
    }

    private async Task OnSelect(Bracelet bracelet)
    {
        await _MessagingService.Add($"Bracelet selected {bracelet.Name}");
        NavigationManager.NavigateTo("/braceletdetail/" + bracelet.Name);
    }
    private async Task Add()
    {
        bracelets = await client.Add(BraceletName);
    }

    private async Task Delete(Bracelet bracelet)
    {

        bracelets = await client.Delete(bracelet);
    }
}
